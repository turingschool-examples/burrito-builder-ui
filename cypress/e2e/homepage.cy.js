describe("Burrito Builder homepage userflow", () => {
  beforeEach(() => {
    cy.intercept("GET", "http://localhost:3001/api/v1/orders", {
      statusCode: 200,
      fixture: "orders",
    }).as("homepage");
    cy.visit("http://localhost:3000");
  });
  it("should display homepage with orders", () => {
    cy.intercept("POST", "http://localhost:3001/api/v1/orders", {
      statusCode: 201,
      fixture: "postOrder",
    }).as("post");
    cy.wait("@homepage").then((interception) => {
      cy.get("body")
        .get("header")
        .get("h1")
        .contains("h1", "Burrito Builder")
        .get("header")
        .get("form")
        .get("input")
        .should("have.attr", "placeholder", "Name")
        .get('[type="submit"]')
        .contains("Submit Order")
        .click()
        .get(".error-message")
        .contains(
          "Form is incomplete. All fields need to be filled in or selected before submission."
        )
        .get("input")
        .should("have.attr", "placeholder", "Name")
        .get('[name="beans"]')
        .contains("beans")
        .get('[type="submit"]')
        .contains("Submit Order")
        .click()
        .get(".error-message")
        .contains(
          "Form is incomplete. All fields need to be filled in or selected before submission."
        )
        .get("input")
        .type("Nicole")
        .should("have.value", "Nicole")
        .get("header")
        .get("form")
        .get('[name="beans"]')
        .contains("beans")
        .get("form")
        .get('[name="steak"]')
        .contains("steak")
        .get("form")
        .get('[name="carnitas"]')
        .contains("carnitas")
        .get("form")
        .get('[name="sofritas"]')
        .contains("sofritas")
        .get("form")
        .get('[name="lettuce"]')
        .contains("lettuce")
        .get("form")
        .get('[name="queso fresco"]')
        .contains("queso fresco")
        .get("form")
        .get('[name="pico de gallo"]')
        .contains("pico de gallo")
        .get("form")
        .get('[name="hot sauce"]')
        .contains("hot sauce")
        .get("form")
        .get('[name="guacamole"]')
        .contains("guacamole")
        .get("form")
        .get('[name="jalapenos"]')
        .contains("jalapenos")
        .get("form")
        .get('[name="cilantro"]')
        .contains("cilantro")
        .get("form")
        .get('[name="sour cream"]')
        .contains("sour cream")
        .get("form")
        .get("p")
        .contains("p", "Order: Nothing selected")
        .get("form")
        .get('[type="submit"]')
        .contains("Submit Order")
        .click()
        .get(".error-message")
        .contains(
          "Form is incomplete. All fields need to be filled in or selected before submission."
        )
        .get("form")
        .get('[name="steak"]')
        .contains("steak")
        .click()
        .get("form")
        .get("p")
        .contains("p", "Order: steak")
        .get("form")
        .get('[name="guacamole"]')
        .contains("guacamole")
        .click()
        .get("form")
        .get("p")
        .contains("p", "Order: steak guacamole")
        .get("form")
        .get('[name="jalapenos"]')
        .contains("jalapenos")
        .click()
        .get("form")
        .get("p")
        .contains("p", "Order: steak guacamole jalapenos")
        .get("section")
        .children()
        .should("have.length", 3)
        .get("section")
        .get("section > :nth-child(1)")
        .get(":nth-child(1) > h3")
        .first()
        .contains("h3", "Pat")
        .get("section")
        .get("section > :nth-child(1)")
        .get(":nth-child(1) > .ingredient-list > :nth-child(1)")
        .first()
        .contains("li", "beans")
        .get("section")
        .get("section > :nth-child(1)")
        .get(":nth-child(1) > .ingredient-list > :nth-child(2)")
        .first()
        .contains("li", "lettuce")
        .get("section")
        .get("section > :nth-child(1)")
        .get(":nth-child(1) > .ingredient-list > :nth-child(3)")
        .first()
        .contains("li", "carnitas")
        .get("section")
        .get("section > :nth-child(1)")
        .get(":nth-child(1) > .ingredient-list > :nth-child(4)")
        .first()
        .contains("li", "queso fresco")
        .get("section")
        .get("section > :nth-child(1)")
        .get(":nth-child(1) > .ingredient-list > :nth-child(5)")
        .first()
        .contains("li", "jalapeno")
        .get("section")
        .get("section > :nth-child(3)")
        .last()
        .contains("h3", "Alex")
        .get("section > :nth-child(3)")
        .get(":nth-child(3) > .ingredient-list > :nth-child(1)")
        .last()
        .contains("li", "sofritas")
        .get("section > :nth-child(3)")
        .get(":nth-child(3) > .ingredient-list > :nth-child(2)")
        .last()
        .contains("li", "beans")
        .get("section > :nth-child(3)")
        .get(":nth-child(3) > .ingredient-list > :nth-child(3)")
        .last()
        .contains("li", "sour cream")
        .get("section > :nth-child(3)")
        .get(":nth-child(3) > .ingredient-list > :nth-child(4)")
        .last()
        .contains("li", "carnitas")
        .get("section > :nth-child(3)")
        .get(":nth-child(3) > .ingredient-list > :nth-child(5)")
        .last()
        .contains("li", "queso fresco")
        .get("form")
        .get('[type="submit"]')
        .contains("Submit Order")
        .click();
      cy.wait("@post").then((interception) => {
        cy.get("section")
          .children()
          .should("have.length", 4)
          .get("section")
          .get("section > :nth-child(1)")
          .get(":nth-child(1) > h3")
          .first()
          .contains("h3", "Pat")
          .get("section")
          .get("section > :nth-child(1)")
          .get(":nth-child(1) > .ingredient-list > :nth-child(1)")
          .first()
          .contains("li", "beans")
          .get("section")
          .get("section > :nth-child(1)")
          .get(":nth-child(1) > .ingredient-list > :nth-child(2)")
          .first()
          .contains("li", "lettuce")
          .get("section")
          .get("section > :nth-child(1)")
          .get(":nth-child(1) > .ingredient-list > :nth-child(3)")
          .first()
          .contains("li", "carnitas")
          .get("section")
          .get("section > :nth-child(1)")
          .get(":nth-child(1) > .ingredient-list > :nth-child(4)")
          .first()
          .contains("li", "queso fresco")
          .get("section")
          .get("section > :nth-child(1)")
          .get(":nth-child(1) > .ingredient-list > :nth-child(5)")
          .first()
          .contains("li", "jalapeno")
          .get("section > :nth-child(4)")
          .get(":nth-child(4) > h3")
          .contains("Nicole")
          .get("section")
          .get("section > :nth-child(4)")
          .last()
          .get(":nth-child(4) > .ingredient-list > :nth-child(1)")
          .contains("li", "steak")
          .get("section")
          .get("section > :nth-child(4)")
          .last()
          .get(":nth-child(4) > .ingredient-list > :nth-child(2)")
          .contains("li", "guacamole")
          .get("section")
          .get("section > :nth-child(4)")
          .last()
          .get(":nth-child(4) > .ingredient-list > :nth-child(3)")
          .contains("li", "jalapenos");
      });
    });
  });
  it("should display helpful error messages to user", () => {
    cy.intercept("GET", "http://localhost:3001/api/v1/orders", {
      statusCode: 404,
      body: "Not Found",
    });
    cy.contains("p", "No orders yet!");
  });
});
